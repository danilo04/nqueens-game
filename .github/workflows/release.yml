name: Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  quality-gate:
    name: Pre-Release Quality Gate
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make scripts executable
      run: |
        chmod +x gradlew
        chmod +x code-quality.sh

    - name: Run comprehensive quality checks
      run: ./code-quality.sh check

    - name: Run all tests
      run: ./gradlew test

  build-release:
    name: Build Release APK
    runs-on: ubuntu-latest
    needs: quality-gate
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@v3

    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x gradlew

    - name: Build release APK
      run: ./gradlew assembleRelease

    - name: Sign APK (if keystore is available)
      if: env.KEYSTORE_FILE != ''
      run: |
        echo "Signing APK..."
        # Add your APK signing logic here if you have a keystore
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}

    - name: Generate changelog
      id: changelog
      run: |
        if [ -f "CHANGELOG.md" ]; then
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          head -20 CHANGELOG.md >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        else
          echo "changelog=No changelog available" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref_name || inputs.version }}
        release_name: N-Queens Game ${{ github.ref_name || inputs.version }}
        body: |
          ## What's Changed
          
          ${{ steps.changelog.outputs.changelog }}
          
          ## Quality Metrics
          - ✅ All code quality checks passed
          - ✅ All unit tests passed
          - ✅ Static analysis completed
          
          ## Downloads
          Download the APK file below to install the N-Queens Game on your Android device.
        draft: false
        prerelease: false

    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: nqueens-game-${{ github.ref_name || inputs.version }}.apk
        asset_content_type: application/vnd.android.package-archive

    - name: Upload mapping file (if available)
      if: hashFiles('app/build/outputs/mapping/release/mapping.txt') != ''
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/mapping/release/mapping.txt
        asset_name: mapping-${{ github.ref_name || inputs.version }}.txt
        asset_content_type: text/plain
